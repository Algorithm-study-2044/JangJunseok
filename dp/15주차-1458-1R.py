class Solution:
    def maxDotProduct(self, nums1: List[int], nums2: List[int]) -> int:
        m,n = len(nums1), len(nums2)
        
# 근데 애초에 dp라는 사고가 어떻게 가능한지.
# [3,-2] [2,-6,7] 에서
# 나라면 3,-2,3-2 이렇게 3개로 나눠서 계산해봤을거고.
# -2일때를 계산하는게 아니라, -2까지를 포함하는. 즉 이전꺼가 포함되었는지아닌지는 알 수 없도록.

# 1. [2,1] [3]
# 2. [2,1] [3,0]
# 3. [2,1] [3,0,2]

# 1->2할때. 
# 1번 // 그리고 dp[i-1][j-1] + 1*0 과 dp[i-1][j] <-- 이게 내적합이 될것임.
# 그리고 0과 2 // 그리고 0과 1 이렇게 구해줘야 할듯.
